Применяем первый принцип S - Single Responsibility Principle - принцип единственной ответственности.
Из класса UserModel выносим алгоритм сохранения и загрузки данных пользователя в отдельный класс UserFileManager
используя интерфейс UserSaveRead что соответствует принципу D — Dependency Inversion (Принцип инверсии зависимостей)
т.е. можно будет использовать любые классы реализующие методы интерфейса UserSaveRead

Для демонстрации принципа L — Liskov Substitution (Принцип подстановки Барбары Лисков)
в view добавлена перегрузка метода с аргументом User (public void showUserData(User user))
используя интерфейс UserGetVip и новый класс UserVip наследующий User
В UserManagementApp передаем в модель Vip пользователя и демонстрируем что ничего не сломается в программе,
но при выводе информации изменится поведение. При вводе такого же имени и логина
программа напишет о том что пользователь уже существует